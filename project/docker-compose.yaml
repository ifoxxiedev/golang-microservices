services:
  mail:
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
      - "1025:1025"

  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
      - "15672:15672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: dba@email.com
      PGADMIN_DEFAULT_PASSWORD: q1w2e3r4
    ports:
      - 8085:80 

  postgres:
    image: 'postgres:14.0'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db/

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: on-failure
    environment:
      LOGGER_SERVICE_URL: "http://logger-service"
      DSN: "host=postgres port=5432 dbname=users user=postgres password=password sslmode=disable timezone=UTC connect_timeout=5"
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1

  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: on-failure
    environment:
      AUTH_SERVICE_URL: "http://authentication-service"
      LOGGER_SERVICE_URL: "http://logger-service"
      MAIL_SERVICE_URL: "http://mail-service"
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: on-failure
    environment:
      MONGO_URL: "mongodb://mongo:27017"
    ports:
      - "8082:80"
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: on-failure
    environment:
      MAIL_DOMAIN: "localhost"
      MAIL_HOST: "mail"
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: "none"
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_FROM_NAME: "Jhon Smith"
      MAIL_FROM_ADDRESS: "jhon.smith@example.com"
    ports:
      - "8083:80"
    deploy:
      mode: replicated
      replicas: 1